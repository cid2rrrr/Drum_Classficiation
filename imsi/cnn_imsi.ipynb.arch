{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def resize_axis(array, N):\n",
    "    if(array.shape[1] > N):\n",
    "        resized = array[:,:N]\n",
    "    else:\n",
    "        resized = np.lib.pad(array, ((0,0),(0,N - array.shape[1])),\\\n",
    "            'constant', constant_values=(np.min(array)))\n",
    "    return resized\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_cnn_input(raw_audio):\n",
    "    frame_length = min(2048, len(raw_audio))\n",
    "    mel_spec = librosa.core.power_to_db(librosa.feature.melspectrogram(\n",
    "        y=raw_audio, sr=DEFAULT_SR, n_fft=frame_length,\n",
    "        hop_length=frame_length//4, n_mels=CNN_INPUT_SIZE[0])\n",
    "    )\n",
    "    # Truncate number of frames stored\n",
    "    m = min(CNN_INPUT_SIZE[1], mel_spec.shape[1])\n",
    "    print(mel_spec.shape[1])\n",
    "    N =20\n",
    "    mell = resize_axis(mel_spec[:, 0:m], N)\n",
    "    return mell"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "DEFAULT_SR = 22050"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.colorbar.Colorbar at 0x151ba9610>"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import librosa\n",
    "import librosa.display\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# from past.utils import old_div\n",
    "\n",
    "#y, sr = librosa.load(\"D:\\Drum\\HiHat\\hat 2 SMOKE.wav\")\n",
    "#y, sr = librosa.load(\"D:\\Drum\\HiHat\\!Hat 39.wav\")\n",
    "#y, sr = librosa.load('/Users/cooky/HDD/Drum/Dilla Drums/!Snare 170.wav')\n",
    "y, sr = librosa.load('/Users/cooky/HDD/Drum/illmind blap kit 7/KICK_FUELO.wav')\n",
    "y, sr = librosa.load('/Users/cooky/HDD/Drum/Dilla Drums/!Snare 170.wav')\n",
    "\n",
    "#print(y.shape)\n",
    "\n",
    "yt, index = librosa.effects.trim(y=y, top_db=30)\n",
    "\n",
    "\n",
    "\n",
    "yt = librosa.util.normalize(yt)\n",
    "\n",
    "#print(yt)\n",
    "\n",
    "#D = librosa.stft(yt)  # STFT of y\n",
    "\n",
    "# print(D.shape)\n",
    "\n",
    "# mel = librosa.feature.melspectrogram(\n",
    "#         S=D, sr=DEFAULT_SR,\n",
    "#         hop_length=1024, n_mels=128)\n",
    "\n",
    "\n",
    "#S_db = librosa.amplitude_to_db(np.abs(D), ref=np.max)\n",
    "\n",
    "#resized_S_db = resize_axis(S_db)\n",
    "\n",
    "#print(S_db.shape)\n",
    "\n",
    "plt.figure()\n",
    "librosa.display.specshow(k)\n",
    "plt.colorbar()\n",
    "\n",
    "\n",
    "# plt.figure()\n",
    "# librosa.display.specshow(mel)\n",
    "# plt.colorbar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1025, 14)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "S_db.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "def trim(raw_audio, sr):\n",
    "    '''\n",
    "    Finds the first onset of the sound, returns a good start time and end time that isolates the sound\n",
    "    :param raw_audio: np array of audio data, from librosa.load\n",
    "    :param sr: sample rate\n",
    "    :return: dict with 'start' and 'end', in seconds\n",
    "    '''\n",
    "    start = 0.0\n",
    "    end = None\n",
    "\n",
    "    # Add an empty second so that the beginning onset is recognized\n",
    "    silence_to_add = 1.0\n",
    "    raw_audio = np.append(np.zeros(int(silence_to_add * sr)), raw_audio)\n",
    "\n",
    "    # Spectral flux\n",
    "    hop_length = int(librosa.time_to_samples(1. / 200, sr=sr))\n",
    "    onsets = librosa.onset.onset_detect(y=raw_audio, sr=sr, hop_length=hop_length, units='time')\n",
    "\n",
    "    if len(onsets) == 0:\n",
    "        return {'start': start, 'end': end}\n",
    "    elif len(onsets) > 1:\n",
    "        # If there are multiple onsets, cut it off just before the second one\n",
    "        end = onsets[1] - (silence_to_add + 0.01)\n",
    "\n",
    "    start = max(onsets[0] - (silence_to_add + 0.01), 0.0)\n",
    "    return {'start': start, 'end': end}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'start': 0.0, 'end': None}"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trim(y, sr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "CNN_INPUT_SIZE = (128, 256)\n",
    "DEFAULT_SR = 22050"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_cnn_input(raw_audio):\n",
    "    frame_length = min(2048, len(raw_audio))\n",
    "    print('rawaudio', frame_length)\n",
    "    mel_spec = librosa.core.power_to_db(librosa.feature.melspectrogram(\n",
    "        y=raw_audio, sr=DEFAULT_SR, n_fft=frame_length,\n",
    "        hop_length=frame_length//4, n_mels=CNN_INPUT_SIZE[0])\n",
    "    )\n",
    "    # Truncate number of frames stored\n",
    "    m = min(CNN_INPUT_SIZE[1], mel_spec.shape[1])\n",
    "    return mel_spec[:, 0:m]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "205"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1025//5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rawaudio 1025\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/cooky/miniforge3/lib/python3.9/site-packages/librosa/util/decorators.py:88: UserWarning: n_fft=1025 is too small for input signal of length=14\n",
      "  return f(*args, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "a = extract_cnn_input(S_db)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1025, 128, 1)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "def init_based(a,N):\n",
    "    b = np.zeros((a.shape[0], N))\n",
    "    b[:, :a.shape[1]] = a\n",
    "    return b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "N = 20\n",
    "aa = np.lib.pad(S_db, ((0,0),(0,N)), 'constant', constant_values=(-80))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.colorbar.Colorbar at 0x14ff13910>"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#D = librosa.stft(a)  # STFT of y\n",
    "#S_db = librosa.amplitude_to_db(np.abs(D), ref=np.max)\n",
    "\n",
    "plt.figure()\n",
    "librosa.display.specshow(S_db)\n",
    "plt.colorbar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1025, 34)"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aa.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.colorbar.Colorbar at 0x14ff85fa0>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "librosa.display.specshow(aa)\n",
    "plt.colorbar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "from torch import nn\n",
    "import torch.nn.functional as F"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "DATASET_MEAN = -22.72945807\n",
    "DATASET_STD = 13.65106709"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_cnn_input(raw_audio):\n",
    "    frame_length = min(2048, len(raw_audio))\n",
    "    mel_spec = librosa.core.power_to_db(librosa.feature.melspectrogram(\n",
    "        y=raw_audio, sr=DEFAULT_SR, n_fft=frame_length,\n",
    "        hop_length=frame_length//4, n_mels=CNN_INPUT_SIZE[0])\n",
    "    )\n",
    "    # Truncate number of frames stored\n",
    "    m = min(CNN_INPUT_SIZE[1], mel_spec.shape[1])\n",
    "    print(mel_spec.shape[1])\n",
    "    N =20\n",
    "    mell = resize_axis(mel_spec[:, 0:m], N)\n",
    "    return mell"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14\n",
      "14\n"
     ]
    }
   ],
   "source": [
    "k = extract_cnn_input(y)\n",
    "kk = extract_cnn_input(yt)\n",
    "#kkk = extract_cnn_input(S_db)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "256"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CNN_INPUT_SIZE[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(128, 20)"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "k.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(128, 20)"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kk.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'kkk' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m/Users/cooky/Documents/GitHub/Drum_Classficiation/imsi.ipynb Cell 25'\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> <a href='vscode-notebook-cell:/Users/cooky/Documents/GitHub/Drum_Classficiation/imsi.ipynb#ch0000023?line=0'>1</a>\u001b[0m kkk\u001b[39m.\u001b[39mshape\n",
      "\u001b[0;31mNameError\u001b[0m: name 'kkk' is not defined"
     ]
    }
   ],
   "source": [
    "kkk.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.colorbar.Colorbar at 0x151957a60>"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "librosa.display.specshow(k)\n",
    "plt.colorbar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "36975e2464779a1907498622a1ff8d141cf5663f65c7cf0c02ae689c8b788bad"
  },
  "kernelspec": {
   "display_name": "Python 3.9.12",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "36975e2464779a1907498622a1ff8d141cf5663f65c7cf0c02ae689c8b788bad"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
